#
# Licensed to the Apache Software Foundation (ASF) under one or more
# contributor license agreements.  See the NOTICE file distributed with
# this work for additional information regarding copyright ownership.
# The ASF licenses this file to You under the Apache License, Version 2.0
# (the "License"); you may not use this file except in compliance with
# the License.  You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.
#

version: "3"

services:

  db:
    image: mariadb
    restart: always
    environment:
      MYSQL_USER: spring-boot-user
      MYSQL_PASSWORD: Password123!?
      MYSQL_DATABASE: UserDB
      MYSQL_ROOT_PASSWORD: Password123!?
    ports:
      - "3305:3306" # this can be accessed at localhost:3305
    volumes:
      - ./src/main/resources/setup.sql:/docker-entrypoint-initdb.d/setup.sql
    command: --init-file /docker-entrypoint-initdb.d/setup.sql
    healthcheck:
      test: [ "CMD", "mysql", "--user=spring-boot-user", "--password=Password123!?", "--execute=SELECT 1" ]
      interval: 1s
      timeout: 10s
      retries: 20


  apisix-dashboard:
    image: apache/apisix-dashboard:2.10.1-alpine
    restart: always
    volumes:
    - ./config/dashboard_conf/conf.yaml:/usr/local/apisix-dashboard/conf/conf.yaml
    ports:
    - "9000:9000"
    networks:
      apisix:

  apisix:
    image: apache/apisix:2.12.1-alpine
    restart: always
    volumes:
      - ./apisix_log:/usr/local/apisix/logs
      - ./config/apisix_conf/config.yaml:/usr/local/apisix/conf/config.yaml:ro
    depends_on:
      - etcd
    ##network_mode: host
    ports:
      - "9080:9080/tcp"
      - "9091:9091/tcp"
      - "9443:9443/tcp"
      - "9092:9092/tcp"
    networks:
      apisix:

  etcd:
    image: bitnami/etcd:3.4.15
    restart: always
    volumes:
      - etcd_data:/bitnami/etcd
    environment:
      ETCD_ENABLE_V2: "true"
      ALLOW_NONE_AUTHENTICATION: "yes"
      ETCD_ADVERTISE_CLIENT_URLS: "http://0.0.0.0:2379"
      ETCD_LISTEN_CLIENT_URLS: "http://0.0.0.0:2379"
    ports:
      - "2379:2379/tcp"
    networks:
      apisix:

#  web1:
#    image: nginx:1.19.0-alpine
#    restart: always
#    volumes:
#      - ./config/upstream/web1.conf:/etc/nginx/nginx.conf
#    ports:
#      - "9081:80/tcp"
#    environment:
#      - NGINX_PORT=80
#    networks:
#      apisix:


  prometheus:
    image: prom/prometheus:v2.25.0
    restart: always
    volumes:
      - ./config/prometheus_conf/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      apisix:

  grafana:
    image: grafana/grafana:7.3.7
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - "./config/grafana_conf/provisioning:/etc/grafana/provisioning"
      - "./config/grafana_conf/dashboards:/var/lib/grafana/dashboards"
      - "./config/grafana_conf/config/grafana.ini:/etc/grafana/grafana.ini"
    networks:
      apisix:

  kafka:
    image: bitnami/kafka
    restart: always
    ports:
      - "9099:9092"
    environment:
      - ALLOW_PLAINTEXT_LISTENER=yes
      - KAFKA_CFG_ZOOKEEPER_CONNECT=zookeeper:2181
    depends_on:
      - zookeeper


  zookeeper:
    image: docker.io/bitnami/zookeeper:3.7
    ports:
      - "2181:2181"
    environment:
      - ALLOW_ANONYMOUS_LOGIN=yes

networks:
  apisix:
    driver: bridge

volumes:
  etcd_data:
    driver: local


